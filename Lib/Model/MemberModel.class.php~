<?php
    class MemberModel extends Model{
        protected $_validate = array(
            array('username', '/^([\x{4e00}-\x{9fa5}a-zA-Z]){1}([\x{4e00}-\x{9fa5}a-zA-Z0-9_]){2,7}$/u', 'Username Error!', 1, 'regex'),
            array('password', 'password2', '确认密码不正确', 1, 'confirm'),
            array('password', '/^([a-zA-Z0-9_-]){8,16}$/', 'Password Error!', 1, 'regex'),
            array('password2', '/^([a-zA-Z0-9_-]){8,16}$/', 'Confirm Password error!', 1, 'regex'),
            array('email', '/^([a-zA-Z0-9_-])+@[a-zA-Z0-9]+((\.|-)[a-zA-Z0-9]+)*\.[a-zA-Z0-9]+$/', 'Email Error!', 1, 'regex'),
            array('qq', '/^[0-9]{6,12}$/', 'QQ number error!', 1, 'regex'),
            array('phone', '/^[0-9]{11}$/', 'Phone number error!', 1, 'regex')
            );

        protected $_auto = array(
            array('salt', 'GetSalt', 1, 'callback'),
            array('password', 'aoMd5', 1, 'callback'),
            array('regTime', 'time', 1, 'function')
            );

        public $salt = '';


        public function aoMd5(){
            $password = $_POST['password'];
            $temp = md5($password);
            $len_1 = strlen($password);
            $part_1 = substr($temp, 0, $len_1);
            $len_2 = $len_1 - 16;
            $part_2 = substr($temp, 0, $len_2);
            $md = md5(md5(md5(md5($this->salt). $part_1). $password). $part_2);
            return $md;
        }


        public function GetSalt(){
            $salt = rand(100000000, 999999999);
            $this->salt = $salt;
            return $salt;
        }
    }
?>